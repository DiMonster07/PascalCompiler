using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PascalCompiler.Scaner
{
    enum tokenType { Id = 257,
                     Do,
                     If,
                     In,
                     To,
                     Of,
                     Or,
                     Mod,
                     Nil,
                     Not,
                     Set,
                     Shl,
                     Shr,
                     Var,
                     Xor,
                     Asm,
                     And,
                     For,
                     End,
                     Case,
                     Else,
                     File,
                     Goto,
                     With,
                     Uses,
                     Then,
                     Type,
                     Unit,
                     Until,
                     While,
                     Array,
                     Begin,
                     Break,
                     Const,
                     Label,
                     DownTo,
                     Inline,
                     Object,
                     Packed,
                     Record,
                     Repeat,
                     Exports,
                     Library,
                     Program,
                     Function,
                     Procedure,
                     Inherited,
                     Interface,
                     Destructor,
                     Constructor,
                     Implementation,
                     
                     Far,
                     Name,
                     Near,
                     Index,
                     Export,
                     Public,
                     Forward,
                     Virtual,
                     Private,
                     External,
                     Resident,
                     Absolute,
                     Assembler,
                     Interrupt,

                     Add,
                     Sub,
                     Mult,
                     Div,
                     Hat,
                     Less,
                     Equal,
                     Great,
                     NotEqual,
                     LessEqual,
                     GreatEqual,
                     Assignment,

                     Dot,
                     Comma,
                     Colon,
                     Semicolon,
                     DoubleDots,
                     OpeningParenthesis,
                     ClosingParenthesis,
                     OpeningSquareBracket,
                     ClosingSquareBracket,

                     Number,
                     String,
                     Delimiter,
                     Operation,
                     Eof,                   };

    static partial class Scaner
    {
        static public Dictionary<string, tokenType> delimeters = new Dictionary<string, tokenType>()
        {
            { ".",  tokenType.Dot                  },
            { ",",  tokenType.Comma                },
            { ":",  tokenType.Colon                },
            { ";",  tokenType.Semicolon            },
            { "..", tokenType.DoubleDots           },
            { "(",  tokenType.OpeningParenthesis   },
            { ")",  tokenType.ClosingParenthesis   },
            { "[",  tokenType.OpeningSquareBracket },
            { "]",  tokenType.ClosingSquareBracket },
        };

        static public Dictionary<string, tokenType> operations = new Dictionary<string, tokenType>()
        {
            { "^",tokenType.Hat          },
            { "/", tokenType.Div         },
            { "+", tokenType.Add         },
            { "-", tokenType.Sub         },
            { "*", tokenType.Mult        },
            { "<", tokenType.Less        },
            { "=", tokenType.Equal       },
            { ">", tokenType.Great       },
            { "<>", tokenType.NotEqual   },
            { "<=", tokenType.LessEqual  },
            { ">=", tokenType.GreatEqual },
            { ":=", tokenType.Assignment },
        };
    }
}
